--SEND HTTPS GET REQUEST
DECLARE
   V_REQ           UTL_HTTP.REQ;
   V_RESP          UTL_HTTP.RESP;
   V_REQ_CONTEXT   UTL_HTTP.REQUEST_CONTEXT_KEY;
   V_DATA       VARCHAR2 (32000);
   V_CONTENT_LENGTH    NUMBER;
   V_CONTENT_TYPE VARCHAR2 (100);
   V_URI           VARCHAR2 (200);
BEGIN
   V_URI := 'https://localhost';
   V_REQ_CONTEXT :=
      UTL_HTTP.CREATE_REQUEST_CONTEXT (
         WALLET_PATH            => 'file:C:\wallet',
         WALLET_PASSWORD        => 'system11',
         ENABLE_COOKIES         => FALSE);

   V_REQ :=
      UTL_HTTP.BEGIN_REQUEST (URL               => V_URI,
                              METHOD            => 'GET',
                              REQUEST_CONTEXT   => V_REQ_CONTEXT);
   UTL_HTTP.SET_HEADER (V_REQ, 'User-agent', 'mozilla/4.0');
   UTL_HTTP.SET_HEADER (V_REQ, 'Accept', 'application/json');
   UTL_HTTP.SET_HEADER (V_REQ, 'Accept-Charset', 'utf-8');
   V_RESP := UTL_HTTP.GET_RESPONSE (V_REQ);
   UTL_HTTP.GET_HEADER_BY_NAME (V_RESP, 'Content-Type', V_CONTENT_TYPE);
   BEGIN
   UTL_HTTP.GET_HEADER_BY_NAME (V_RESP, 'Content-Length', V_CONTENT_LENGTH);
   EXCEPTION WHEN OTHERS THEN
   NULL;
   END;
   UTL_HTTP.READ_TEXT (V_RESP, V_DATA);
   DBMS_OUTPUT.PUT_LINE ('DATATYPE=' || V_CONTENT_TYPE);
   DBMS_OUTPUT.PUT_LINE ('DATALENGTH=' || V_CONTENT_LENGTH);
   DBMS_OUTPUT.PUT_LINE ('RECDATA=' || V_DATA);
   UTL_HTTP.END_RESPONSE (V_RESP);
   UTL_HTTP.DESTROY_REQUEST_CONTEXT (V_REQ_CONTEXT);
EXCEPTION
   WHEN UTL_HTTP.END_OF_BODY
   THEN
      DBMS_OUTPUT.PUT_LINE ('ERROR END_OF_BODY');
      UTL_HTTP.END_RESPONSE (V_RESP);
   WHEN OTHERS
   THEN
      DBMS_OUTPUT.PUT_LINE (SQLERRM);
END;
--============================================
--SEND HTTP GET REQUEST
DECLARE
   V_REQ           UTL_HTTP.REQ;
   V_RESP          UTL_HTTP.RESP;
   V_DATA       VARCHAR2 (32000);
   V_CONTENT_LENGTH    NUMBER;
   V_CONTENT_TYPE VARCHAR2 (100);
   V_URI           VARCHAR2 (200);
BEGIN
   V_URI := 'http://localhost';
   V_REQ :=
      UTL_HTTP.BEGIN_REQUEST (URL               => V_URI,
                              METHOD            => 'GET');
   UTL_HTTP.SET_HEADER (V_REQ, 'User-agent', 'mozilla/4.0');
   UTL_HTTP.SET_HEADER (V_REQ, 'Accept', 'application/json');
   UTL_HTTP.SET_HEADER (V_REQ, 'Accept-Charset', 'utf-8');
   V_RESP := UTL_HTTP.GET_RESPONSE (V_REQ);
   UTL_HTTP.GET_HEADER_BY_NAME (V_RESP, 'Content-Type', V_CONTENT_TYPE);
   BEGIN
   UTL_HTTP.GET_HEADER_BY_NAME (V_RESP, 'Content-Length', V_CONTENT_LENGTH);
   EXCEPTION WHEN OTHERS THEN
   NULL;
   END;
   UTL_HTTP.READ_TEXT (V_RESP, V_DATA);
   DBMS_OUTPUT.PUT_LINE ('DATATYPE=' || V_CONTENT_TYPE);
   DBMS_OUTPUT.PUT_LINE ('DATALENGTH=' || V_CONTENT_LENGTH);
   DBMS_OUTPUT.PUT_LINE ('RECDATA=' || V_DATA);
   UTL_HTTP.END_RESPONSE (V_RESP);
EXCEPTION
   WHEN UTL_HTTP.END_OF_BODY
   THEN
      DBMS_OUTPUT.PUT_LINE ('ERROR END_OF_BODY');
      UTL_HTTP.END_RESPONSE (V_RESP);
   WHEN OTHERS
   THEN
      DBMS_OUTPUT.PUT_LINE (SQLERRM);
END;
--===================================
--SEND HTTPS POST REQUEST
DECLARE
   V_REQ           UTL_HTTP.REQ;
   V_RESP          UTL_HTTP.RESP;
   V_REQ_CONTEXT   UTL_HTTP.REQUEST_CONTEXT_KEY;
   V_DATA       VARCHAR2 (32000);
   V_SENT_DATA      VARCHAR2 (32000);
   V_CONTENT_LENGTH    NUMBER;
   V_CONTENT_TYPE    VARCHAR2 (100);
   V_URI           VARCHAR2 (200);
BEGIN
   V_URI := 'https://localhost';
   V_SENT_DATA := '{"id":1, "name":"احمد ابراهيم"}';
   V_CONTENT_LENGTH := LENGTHB (V_SENT_DATA);
   V_REQ_CONTEXT :=
      UTL_HTTP.CREATE_REQUEST_CONTEXT (
         WALLET_PATH       => 'file:C:\wallet',
         WALLET_PASSWORD   => 'system11',
         ENABLE_COOKIES    => FALSE);
   V_REQ :=
      UTL_HTTP.BEGIN_REQUEST (URL               => V_URI,
                              METHOD            => 'POST',
                              REQUEST_CONTEXT   => V_REQ_CONTEXT);
   UTL_HTTP.SET_HEADER (V_REQ, 'User-agent', 'mozilla/4.0');
   UTL_HTTP.SET_HEADER (V_REQ,
                        'Content-type',
                        'application/json;charset=utf-8');
   UTL_HTTP.SET_HEADER (V_REQ, 'Accept-Charset', 'utf-8');
   UTL_HTTP.SET_HEADER (V_REQ, 'Content-Length', V_CONTENT_LENGTH);
   UTL_HTTP.SET_BODY_CHARSET (V_REQ, 'utf-8');
   UTL_HTTP.WRITE_TEXT (V_REQ, V_SENT_DATA);
   V_RESP := UTL_HTTP.GET_RESPONSE (V_REQ);
   UTL_HTTP.GET_HEADER_BY_NAME (V_RESP, 'Content-Type', V_CONTENT_TYPE);
   BEGIN
   UTL_HTTP.GET_HEADER_BY_NAME (V_RESP, 'Content-Length', V_CONTENT_LENGTH);
   EXCEPTION WHEN OTHERS THEN
   NULL;
   END;
   UTL_HTTP.READ_TEXT (V_RESP, V_DATA);
   DBMS_OUTPUT.PUT_LINE ('DATATYPE: ' || V_CONTENT_TYPE);
   DBMS_OUTPUT.PUT_LINE ('DATALENGTH: ' || V_CONTENT_LENGTH);
   DBMS_OUTPUT.PUT_LINE ('DATA: ' || V_DATA);
   UTL_HTTP.END_RESPONSE (V_RESP);
EXCEPTION
   WHEN UTL_HTTP.END_OF_BODY
   THEN
      DBMS_OUTPUT.PUT_LINE ('DATA ERROR');
      UTL_HTTP.END_RESPONSE (V_RESP);
   WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE (SQLERRM);
      --UTL_HTTP.END_RESPONSE (V_RESP);
END;
--================================
--SEND HTTP POST REQUEST
DECLARE
   V_REQ           UTL_HTTP.REQ;
   V_RESP          UTL_HTTP.RESP;
   V_DATA       VARCHAR2 (32000);
   V_SENT_DATA      VARCHAR2 (32000);
   V_CONTENT_LENGTH    NUMBER;
   V_CONTENT_TYPE    VARCHAR2 (100);
   V_URI           VARCHAR2 (200);
BEGIN
   V_URI := 'http://localhost';
   V_SENT_DATA := '{"id":1, "name":"احمد ابراهيم"}';
   V_CONTENT_LENGTH := LENGTHB (V_SENT_DATA);
   V_REQ :=
      UTL_HTTP.BEGIN_REQUEST (URL               => V_URI,
                              METHOD            => 'POST');
   UTL_HTTP.SET_HEADER (V_REQ, 'User-agent', 'mozilla/4.0');
   UTL_HTTP.SET_HEADER (V_REQ,
                        'Content-type',
                        'application/json;charset=utf-8');
   UTL_HTTP.SET_HEADER (V_REQ, 'Accept-Charset', 'utf-8');
   UTL_HTTP.SET_HEADER (V_REQ, 'Content-Length', V_CONTENT_LENGTH);
   UTL_HTTP.SET_BODY_CHARSET (V_REQ, 'utf-8');
   UTL_HTTP.WRITE_TEXT (V_REQ, V_SENT_DATA);
   V_RESP := UTL_HTTP.GET_RESPONSE (V_REQ);
   UTL_HTTP.GET_HEADER_BY_NAME (V_RESP, 'Content-Type', V_CONTENT_TYPE);
   BEGIN
   UTL_HTTP.GET_HEADER_BY_NAME (V_RESP, 'Content-Length', V_CONTENT_LENGTH);
   EXCEPTION WHEN OTHERS THEN
   NULL;
   END;
   UTL_HTTP.READ_TEXT (V_RESP, V_DATA);
   DBMS_OUTPUT.PUT_LINE ('DATATYPE: ' || V_CONTENT_TYPE);
   DBMS_OUTPUT.PUT_LINE ('DATALENGTH: ' || V_CONTENT_LENGTH);
   DBMS_OUTPUT.PUT_LINE ('DATA: ' || V_DATA);
   UTL_HTTP.END_RESPONSE (V_RESP);
EXCEPTION
   WHEN UTL_HTTP.END_OF_BODY
   THEN
      DBMS_OUTPUT.PUT_LINE ('DATA ERROR');
      UTL_HTTP.END_RESPONSE (V_RESP);
   WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE (SQLERRM);
      --UTL_HTTP.END_RESPONSE (V_RESP);
END;